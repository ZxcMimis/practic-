{"mappings":"AAAA,MAAM,MAAM;AAEZ,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,KAAK,gBAAgB,CAAC,UAAU,OAAO;IACrC,EAAE,cAAc;IAChB,MAAM,QAAQ,WAAW,KAAK,CAAC,IAAI;IACnC,MAAM,OAAO,UAAU,KAAK,CAAC,IAAI;IAEjC,IAAI,CAAC,SAAS,CAAC,MAAM;IAErB,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,KAAK;YAC3B,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAK;QACrC;QAEA,MAAM,UAAU,MAAM,IAAI,IAAI;QAC9B,WAAW;QACX,KAAK,KAAK;IACZ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wJAAgC;IAChD;AACF;AAEA,eAAe;IACb,IAAI;QACF,MAAM,MAAM,MAAM,MAAM;QACxB,MAAM,QAAQ,MAAM,IAAI,IAAI;QAC5B,UAAU,SAAS,GAAG;QACtB,MAAM,OAAO,CAAC;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8JAAiC;IACjD;AACF;AAEA,SAAS,WAAW,IAAI;IACtB,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,OAAO,SAAS,GAAG;IACnB,OAAO,SAAS,GAAG,CAAC;2BACK,EAAE,KAAK,KAAK,CAAC;yBACf,EAAE,KAAK,IAAI,CAAC;wCACG,EAAE,KAAK,EAAE,CAAC;AAAoB,EACpE,CAAC;IACD,UAAU,WAAW,CAAC;AACxB;AAEA,UAAU,gBAAgB,CAAC,SAAS,OAAO;IACzC,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe;QAC7C,MAAM,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE;QAC9B,IAAI;YACF,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE;gBAAE,QAAQ;YAAS;YAC/C,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,MAAM;QAClC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;QAChB;IACF;AACF;AAEA","sources":["src/main.js"],"sourcesContent":["const API = 'https://680dfedbc47cb8074d91bfe7.mockapi.io/ap/post/comments';\r\n\r\nconst form = document.querySelector('.form');\r\nconst titleInput = document.querySelector('.form-title');\r\nconst textInput = document.querySelector('.form-text');\r\nconst postsList = document.querySelector('.posts');\r\n\r\nform.addEventListener('submit', async (e) => {\r\n  e.preventDefault();\r\n  const title = titleInput.value.trim();\r\n  const text = textInput.value.trim();\r\n\r\n  if (!title || !text) return;\r\n\r\n  try {\r\n    const res = await fetch(API, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ title, text })\r\n    });\r\n\r\n    const newPost = await res.json();\r\n    renderPost(newPost);\r\n    form.reset();\r\n  } catch (error) {\r\n    console.error('Помилка при створенні поста:', error);\r\n  }\r\n});\r\n\r\nasync function getPosts() {\r\n  try {\r\n    const res = await fetch(API);\r\n    const posts = await res.json();\r\n    postsList.innerHTML = '';\r\n    posts.forEach(renderPost);\r\n  } catch (error) {\r\n    console.error('Помилка при отриманні постів:', error);\r\n  }\r\n}\r\n\r\nfunction renderPost(post) {\r\n  const postEl = document.createElement('li');\r\n  postEl.className = 'post';\r\n  postEl.innerHTML = `\r\n    <h3 class=\"post-title\">${post.title}</h3>\r\n    <p class=\"post-text\">${post.text}</p>\r\n    <button class=\"btn-delete\" data-id=\"${post.id}\">Видалити</button>\r\n  `;\r\n  postsList.appendChild(postEl);\r\n}\r\n\r\npostsList.addEventListener('click', async (e) => {\r\n  if (e.target.classList.contains('btn-delete')) {\r\n    const id = e.target.dataset.id;\r\n    try {\r\n      await fetch(`${API}/${id}`, { method: 'DELETE' });\r\n      e.target.closest('.post').remove();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n});\r\n\r\ngetPosts();"],"names":[],"version":3,"file":"practic-.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}